#+SETUPFILE: setup.org

* Contents                                                         :toc_3_gh:
 - [[#the-blackboard-model][The blackboard model]]
   - [[#the-metaphor][The metaphor]]
     - [[#formalised-metaphor-citecraig1988][Formalised metaphor cite:Craig1988]]
     - [[#expertsknowledge-sources][Experts/knowledge sources]]
     - [[#flexible-representation-of-blackboard-information][Flexible representation of blackboard information]]
     - [[#common-interaction-language][Common interaction language]]
     - [[#positioning-metrics][Positioning metrics]]
     - [[#event-based-activation][Event based activation]]
     - [[#need-for-control][Need for control]]
     - [[#internal-solution-generation][Internal solution generation]]
   - [[#how-does-it-differ-to-rule-based-systems][How does it differ to rule based systems?]]
   - [[#problems][Problems]]

* The blackboard model

"Unlike most AI problem-solving techniques that implement formal models, 
the blackboard approach was designed as a means for dealing with ill-defined, complex applications."
cite:Craig1988

Misztal stated that the blackboard model "has a potential to be used in simulating cognitive processes such as creativity." 
cite:Misztal2014 

** The metaphor 

"Imagine a group of human specialists seated next to a large blackboard. 
The specialists are working cooperatively to solve a problem, 
using the blackboard as the workplace for developing the solution.

Problem solving begins when the problem and initial data are written onto the blackboard.
The specialists watch the blackboard, looking for an opportunity to apply their expertise to the developing solution.
When a specialist finds sufficient information to make a contribution,
she records the contribution on the blackboard,
hopefully enabling other specialists to apply their expertise.
This process of adding contributions to the blackboard continues until the problem has been solved."
cite:Craig1988

*** Formalised metaphor cite:Craig1988 

- Knowledge sources (KSs) are independent modules that contain the knowledge needed to solve the problem. KSs can be widely diverse in representation and inference techniques.
- The blackboard is a global database containing input data, partial solutions, and other data that are in various problem-solving states.
- A control component makes runtime decisions about the course of problem solving and the expenditure of problem-solving resources. The control component is separate from the individual KSs. In some blackboard systems, the control component itself is implemented using a blackboard approach (involving control KSs and blackboard areas devoted to control)

*** Experts/knowledge sources

Experts were traditionally referred to as knowledge sources or KS.

This seems to have stopped and we now call them experts again (cite:Misztal2014)

each "can solve certain aspects of an overall problem"
"No KS requires other KSs in making its contribution"
"Once it finds the information it needs on the blackboard,
 it can proceed without any assistance from other KSs."

"without changing any other KSs, 
additional KSs can be added to the blackboard system,
poorer performing KSs can be enhanced, 
and inappropriate KSs can be removed."

"the internal representation and inferencing machinery used by each KS is similarly hidden from direct view."
"each KS as a black box"


"A KS needs no knowledge of the expertise, or even the existence, of the others;
however, it must be able to understand the state of the problem-solving process and the representation of relevant information on the blackboard."

**** Triggering condition
"Each KS knows the conditions under which it can contribute to the solution"

cite:Craig1988

**** Independence of expertise

 Experts are "not trained to work solely with that specific group of specialists" 
 and may have 
 "learned their expertise in vastly different situations."
 "a specialist is a self-contained expert on some aspects of the problem and can contribute to the solution independently of the particular mix of other specialists in the room."
 In blackboard systems "have this functional modularization of expertise".
 cite:Craig1988

**** Diversity in problem-solving techniques

"It does not matter if one KS is a forward-chaining rule-based system,
another uses a neural network approach, another uses a linear-programming algorithm,
and still another is a procedural simulation program."
cite:Craig1988

*** Flexible representation of blackboard information

"could use any intelligible doodles when adding their contributions to the blackboard.
They might use formulas, diagrams, sentences, checklists, and numerous circles and arrows."

"The blackboard model does not place any prior restrictions on what information can be placed on the blackboard."

"One blackboard application might use assertional blackboard data and require that consistency be maintained.
Another application might allow incompatible alternatives to be maintained on the blackboard,
with each alternative available for opportunistic exploration of the solution."

"Opportunistic is a buzzword intimately associated with blackboard systems.
It means having the control flexibility to perform the most appropriate problem-solving action at each step in the solution process."

cite:Craig1988

*** Common interaction language

"While flexible representation of blackboard information is important,
there must also be a common understanding of the representation of the information placed on the blackboard 
in order for the specialists to interact."

"formulas, diagrams, sentences, and checklists must be understood by all specialists who need to access the information."

"differing nationalities, the use of different languages on the blackboard would hamper or even prohibit sufficient interaction to solve the problem."

"KSs in blackboard systems must be able to correctly interpret the information recorded on the blackboard by other KSs."

"jargon shared by only a few KSs limits the flexibility of applying other KSs on that information."

"representational expressiveness of a specialized representation shared by only a few KSs and a fully general representation understood by all KSs.
Finding the proper balance is an important aspect of blackboard-application engineering."
cite:Craig1988

I think the language of experts can be information. 
Coercion experts that move information from one sub-representation to another.
This will a major source of research.
Ultimately matrices/vectors containing floating point numbers might be best representation?

*** Positioning metrics

Apparently computers are slow so:

"blackboard begins to grow, quickly locating pertinent information becomes a problem."

"specialist should not have to scan the entire blackboard to see if a particular item has been placed on the blackboard by another specialist."
cite:Craig1988

**** "subdivide the blackboard into regions,"

"provide sophisticated multidimensional metrics for efficiently locating blackboard objects of interest."

"Efficient retrieval is needed to support the use of the blackboard as a group memory"

"important characteristic of the blackboard approach is the ability to integrate contributions for which relationships would be difficult to specify by the KS writer in advance."

"KS working on one aspect of the problem may put a contribution on the blackboard that does not initially seem relevant or immediately interesting to any other KS."

"Only until much later, when substantial work on other aspects of the problem has been performed,
is there enough context to realize the value of the early contribution."

"Additionally, the system can notice when promising contributions placed on the blackboard remain unused by other KSs and possibly choose to focus problem-solving activity on understanding why they did not fit with other contributions."

"This makes a simple pattern-matching specification of the specific contributions difficult and computationally inefficient."
I'm not sure this a problem????

"contributions placed on the blackboard may never prove useful,
and maintaining the state of numerous, partially completed patterns is expensive."

"an important characteristic of blackboard systems is enabling an executing KS to quickly and efficiently inspect the blackboard to see if relevant information is present."

Hearsay-II developers noticed that performance would be bad and opted to use a combination of "simple triggering-condition specifications to be followed by a more detailed procedural examination of the blackboard before activating the KS for execution."

*** Event based activation

KSs do not interact directly.
Each KS watches the blackboard for *opportunity* to contribute.

**** Opportunities arise when
***** addition
***** removal
***** change
***** external events

"each KS informs the blackboard system about the kind of events in which it is interested." cite:Craig1988 
I'm not sure about this. I still feel a search may be OK????
I think computers are quick enough to do a pattern search. Speed is the least of our troubles, art takes human ages. Computers do it much quicker. I think we're going plenty fast enough.

*** Need for control

**** cite:Misztal2014 just uses a priority number to order things

**** cite:Craig1988 

"A control component that is separate from the individual KSs is responsible for managing the course of problem solving.
The control component can be viewed as a specialist in directing problem solving, by considering the overall benefit of the contributions that would be made by triggered KSs.
When the currently executing KS activation completes, the control component selects the most appropriate pending KS activation for execution."

"Each triggered KS informs the control component of the quality and costs associated with its contribution,
without actually performing the work to compute the contribution."
"using fast, low-cost, approximations developed by the KS writer."
"If I am executed, I’ll generate contributions of this type, 
with these qualities, while expending these resources."

I'm not sure the above is a good idea. I'd rather prioritisation agents. They could re-order based on any logic.
We could have multiple agents responsible for reordering different sets of agents.

*** Internal solution generation

** How does it differ to rule based systems?

"Rule-based systems are also modular, but at the level of individual rules.
Unlike the large-grained scope of KSs, 
the small size of each rule prevents full independence.
A pair of rules that implement iteration by using a counter value and a termination rule is an example of two rules that cannot be designed independently or removed individually without affecting the performance of the other rule."
cite:Craig1988

** Problems

"the lack of formal specifications has also contributed to confusion about blackboard systems and their proper place in the AI problem-solving toolkit."
cite:Craig1988
