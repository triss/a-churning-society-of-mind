#+SETUPFILE: setup.org

* Contents                                                         :toc_3_gh:
 - [[#todo-namespace-ns-rootcore][TODO Namespace: a-churning-society-of-mind.core]]
         - [[#note-for-authors--contributors][Note for authors / contributors]]
     - [[#todo-public-functions][TODO Public functions]]
     - [[#todo-helper-functions][TODO Helper functions]]
     - [[#complete-namespace-definition][Complete namespace definition]]

* TODO Namespace: a-churning-society-of-mind.core

This namespace provides...

*** Note for authors / contributors

If this namespace utilizes code templates defined in
[[file:libraryofbabel.org][libraryofbabel.org]], and you want to tangle it directly from Emacs,
you'll first need to notify Org-mode about the presence of these
templates via =C-c C-v i= and then choose =libraryofbabel.org= from
this directory. This only needs to be done once per emacs session (or
whenever you've updated a template in that file). The supplied
=tangle.sh= script automatically includes this file, so this step
isn't necessary from the command line.

** TODO Public functions

#+BEGIN_SRC clojure :noweb-ref main
  ;; TODO main code...
#+END_SRC

** TODO Helper functions

The following code blocks demonstrate how to use code templates (with
and without arguments) defined in [[file:libraryofbabel.org][libraryofbabel.org]]. Always make sure
such code blocks have the =:noweb yes= header flag in order for the
templates to be resolved.

#+BEGIN_SRC clojure :noweb-ref helpers
  <<lob-a-churning-society-of-mind-greetings(msg="hello world")>>

  (println
   "The result of" '<<lob-a-churning-society-of-mind-verbatim>> "is"
   <<lob-a-churning-society-of-mind-verbatim>>)
#+END_SRC

** Complete namespace definition

#+BEGIN_SRC clojure :tangle ../babel/src/a_churning_society_of_mind/core.cljc :noweb yes :mkdirp yes :padline no
  (ns a-churning-society-of-mind.core)

  <<helpers>>

  <<main>>
#+END_SRC
